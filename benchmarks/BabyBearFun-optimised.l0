fun [[int]] main() =
  let arr_0 = [[2, 4, 5],
               [1, 1000, 3],
               [3, 7, 1]] in
  // D3_1 aliases arr_0
  let D3_1 = replicate(3, transpose(arr_0)) in
  // untuple_10 aliases arr_0, D3_1
  let {untuple_10} =
    mapT(fn {[[int]]} ([int] param_0_3) =>
           // tmp_repl_8 aliases param_0_3
           let tmp_repl_8 = replicate(3, param_0_3) in
           {tmp_repl_8},
         arr_0) in
  let tmp_size_11 = size(1, untuple_10) in
  let tmp_e_12 = 3 = tmp_size_11 in
  let zip_assert_20 = assert(tmp_e_12) in
  let tmp_size_25 = size(2, untuple_10) in
  let tmp_e_27 = 3 = tmp_size_25 in
  let zip_assert_29 = assert(tmp_e_27) in
  // untuple_43 aliases arr_0, D3_1, untuple_10
  let {untuple_43} =
    mapT(fn {[[int]]} ([[int]] arg_33, [[int]] arg_34) =>
           // untuple_42 aliases arg_33, arg_34
           let {untuple_42} =
             <zip_assert_20>
             mapT(fn {[int]} ([int] arg_36, [int] arg_37) =>
                    let {untuple_41} =
                      <zip_assert_29>
                      mapT(fn {int} (int arg_38, int arg_39) =>
                             let val_40 = arg_38 + arg_39 in
                             {val_40},
                           arg_36, arg_37) in
                    {untuple_41},
                  arg_33, arg_34) in
           {untuple_42},
         D3_1, untuple_10) in
  // untuple_52 aliases arr_0, D3_1, untuple_10, untuple_43
  let {untuple_52} =
    mapT(fn {[int]} ([[int]] param_0_44) =>
           let {untuple_51} =
             mapT(fn {int} ([int] param_0_45) =>
                    let {untuple_50} =
                      reduceT(fn {int} (int param_0_46, int param_1_47) =>
                                let bop_48 = param_0_46 < param_1_47 in
                                let val_49 =
                                  if bop_48
                                  then param_0_46
                                  else param_1_47 in
                                {val_49},
                              {1200}, param_0_45) in
                    {untuple_50},
                  param_0_44) in
           {untuple_51},
         untuple_43) in
  // untuple_67 aliases arr_0, untuple_52, D3_1, untuple_10, untuple_43
  let {untuple_67} =
    mapT(fn {[int]} ([int] arg_53, [int] arg_54) =>
           let {untuple_66} =
             mapT(fn {int} (int arg_62, int arg_63) =>
                    let bop_64 = arg_62 < arg_63 in
                    let val_65 =
                      if bop_64
                      then arg_62
                      else arg_63 in
                    {val_65},
                  arg_53, arg_54) in
           {untuple_66},
         untuple_52, arr_0) in
  untuple_67
